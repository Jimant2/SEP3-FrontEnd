@page "/login"

@namespace LoginComponent

@inject IHttpClientFactory _clientFactory

@using SEP3_FrontEnd.Authentication
@using SEP3_FrontEnd.Models 

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<AuthorizeView>
    <NotAuthorized>
        <div class="form-group">
            <label>User name:</label>
            <input type="text" placeholder="user name" @bind-value="username" />
        </div>
        <div class="form-group">
            <label>Password</label>
            <input type="password" placeholder="password" @bind-value="password" />
        </div>
        <div style="color:red">@errorMessage</div>

        <a href="" @onclick="PerformLogin">
            Login
        </a>
    </NotAuthorized>
    <Authorized>
        <a href="" @onclick="PerformLogout">
            Log out
        </a>
    </Authorized>
</AuthorizeView>

@code {
    User user;
    private string errorMessage;
    private string username;
    private string password;


    public async Task PerformLogin()
    {
        var request = new HttpRequestMessage(HttpMethod.Post, "https://localhost8080/sep3/login/user");

        var client = _clientFactory.CreateClient();

        HttpResponseMessage response = await client.SendAsync(request);

        if (response.IsSuccessStatusCode)
        {
            user = await response.Content.ReadFromJsonAsync<User>();
            NavigationManager.NavigateTo("/");
        }
        else
        {
            errorMessage = $"Incorrect information: { response.ReasonPhrase }";
        }
    }

    public async Task PerformLogout()
    {
        errorMessage = "";
        username = "";
        password = "";
        try
        {
            ((CustomAuthenticationStateProvider)AuthenticationStateProvider).Logout();
            NavigationManager.NavigateTo("/");
        } catch (Exception e)
        {

        }

    }

}